@charset "utf-8";
/* info PJ 공통 CSS - common.css */

/* 스타일시트를 사용하는 영역 */
/* CSS문법만 쓸 수 있음 */
/* 
    기본 사용법 :
    선택자{
        속성명 :값;
    }
    - 선택자 : 태그명, 아이디명, 클래스명 등
    - 속성명 : 각 요소를 구성하는 상세속성들
    - 값 : 각 속성에서 사용할 수 있는 값들

    속성명 다음에 콜론(:)
    값 다음에 세미콜론(;)

    [CSS 선택자(selector)]
    1. 타입선택자 : 요소명 (예:h1/a/p/div)
    2. 자손선택자 : 띄어쓰기 (예:h1 a)
    3. 아이디선택자 : # (예: #my)
    4. 클래스선택자 : . (예: .you)
    5. 직계자식선택자 : > (예: div>a)
    6. 그룹선택자 : , (예: p,div)
    7. 종속선택자 : 태그명+아이디/클래스명(예: div#top / a.my)
    8. 형제선택자 : + (예: a+a) -> 해석 : 앞에 지정요소가 없는 형제요소선택
    9. 다중형제선택자 : ~ (틸드) (예: li:nth-child(2)~li) -> 선택된 형제요소 뒤의 모든형제요소들
    10. 속성선택자 : [] (예: a[href=#]) -> 특정속성을 가진 요소를 선택

    [CSS 요소 박스모델 필수속성]
    1. Width : 가로크기 -> 기본값 auto /블록박스는 끝까지 차지 인라인 박스는 내용만큼 늘어남
    2. height : 세로크기 -> 기본값 auto /내용만큼 늘어남
    3. padding : 안쪽여백
    4. border : 경계선
    -> 두께 종류 색상
    -> 두께 - 경계선의 두께
    -> 종류 - solid(선형) deshed(대쉬형) dotted(점선형) ridge(액자형) double(이중선형)
    -> 색 - 경계선 색
    (참고 outline : 두께 종류 색상 -> 박스모델 구성요소가 아님  그러나 외곽선만 표시할 경우 많이 사용됨! 주변에 영향없음)
    ____________________________________________
    
    5. margin : 바깥여백

    [여백 방향별 설정 : padding / margin]
    padding-top padding-bottom padding-left padding-right
    margin-top margin-bottom margin-left margin-right

    padding 한개(4방향 공통)
    padding 한개 두개 (위아래 양쪽)
    padding 한개 두개 세개 (위 양쪽 아래)
    padding 한개 두개 세개 네개 (4방향 양쪽 따로)

    ____________________________________________
    
    margin 한개(4방향 공통)
    margin 한개 두개 (위아래 양쪽)
    margin 한개 두개 세개 (위 양쪽 아래)
    margin 한개 두개 세개 네개 (4방향 양쪽 따로)
    
    ____________________________________________

    [박스의 크기 설정시 패딩과 보더]
    1. 크기 설정없이 auto 인 상태 : 패딩과 보더가 안쪽 포함
    2. width, height 크기를 줄 경우 패딩과 보더는 바깥으로 나감(박스가 설정된 크기보다 커짐 -> 컨텐트 박스 content-box)
    3. 만약 width, height 크기를 유지하고 패딩과 보더를 안쪽으로 포함 시키려면 아래의 속성으로 세팅한다
        box-sizing : border-box(bxb)
    ____________________________________________

    [글자 관련 속성]

    1.글자크가 -> font-size
    값 -> 절대단위 : px, pt (12pt==16px)
        상대단위 : em, rem, %, vw, vh...

    2. 글자두께 -> font-weight
        값 -> lighter(얇게), bold(두껍게)
            bolder(더 두껍게), 100~900(9단계)
            -보통 글자체에 따라 지원여부가 달라짐
    
    3. 글자체 -> font-family
        값 -> 기본적으로 pc에 설치된 서체를 적용함
            순서대로 콤마로 구분하여 대채체를 설정함
        예) font-faily: 궁서체, 굴림체, verdana
        -> 최근에는 웹폰트가 대세
        브라우저에서 다운로드로 지원하는 글자체!

    4. 글자색 -> color
        값-> 색상명, 해시코드, rgb, hsb, hsl 등

    5. 글자자간 -> letter-spacing
        값 -> 숫자에 일반단위 사용
    
    6. 글자줄간격 -> line-height
        값 -> 숫자에 일반단위 사용 / 숫자만 쓰면 글자크기의 배수

    7. 글자단어간격 -> word-spacing
        값 -> 숫자에 일반단위 사용
    
    8. 글자스타일 -> font-style
        값 -> 이탈릭체 : italic
            이탈릭체 해제시 : normal

    9. 글자데코레이션 -> text-decoration
        값 -> 글자에 줄긋기 값
            underline 밑줄
            overline 윗줄
            linethrough 중간줄                
            none 줄없앰
    
    10. 글자들여쓰기 -> text-indent
        값 -> 숫자에 일반단위 사용
        (내어쓰기는 마이너스 숫자)

    참고) https://www.w3schools.com/css/css_font.app

    _____________________________________

    [ 웹 색상표기법 ]

        1. 해시코드 : #6자리숫자
            (두자리가 같을 경우 3자리로 축약표현가능)
            - 16진수로 표기함(0~f)
            - 해시코드로 투명도를 주려면 뒤에 2자리 추가하여
            8자리 숫자로 투명도를 표현함

        2. RGB 코드 : rgba(red,green,blue,알파값)
        - 0~255 까지 숫자중 사용
        - red, green, blue
        - 마지막 a는 alpha값 즉, 투명도 -> 없으면 생략!
        (0~1사이의 소숫점값들 사용)

        [ rgba 2가지 표기법 ]
        1. rgba(red색,green색,blue색,alpha값)
        - alpha값은 투명도 (0~1)
        2. rgb(red색 green색 blue색 / alpha값%)
        - alpha값은 투명도 (0%~100%)

        3. HSL 코드 : hsla(hue,saturation,lightness,알파값)
        - hue(색상), saturation(채도), lightness(명도)
        - hue는 색상번호, 채도와 명도는 0~100%값 범위로 사용
        - 마지막은 alpha값 -> 역시 없으면 생략!

        4. 웹색상명: 지정된 컬러명으로 색생을 셋팅
        예) red, green, blue, pink, navy, 등
        - 모든 색상은 w3schools.com의 색상참조로 가서확인!
        https://www.w3schools.com/cssref/css_colors.asp

    _____________________________________

    [css 적용 우선순위]
    inline > id > class > type
    - 인라인이 가장  쌤
    - 약한 경우에 순위를 가장 높이는 방법! -> !important
    -> 이 방법은 인라인보다도 쌔기 때문에 함부로 쓰면 안됨

    *****************************************
*/
/* 박스공통 */
.part{
    width: 750px;
    border: 4px ridge mediumaquamarine;
    /* 보더 : 두께 종류 색상 (두동색) */
    padding: 10px;
    margin: 20px auto;
    /* 마진:위아래 양쪽 / 양쪽을 auto 로 주면 블록박스가 중앙에 옴 
    margin:0 auto 로 주는 경우가 많아서 마영오 라고 불러줌*/
    box-sizing: border-box;
    /* 박스 크기 유지설정 */
}

header{
    height: 150px;
    text-align: center;
    /* 글자중앙 */
    background-color: rgb(196, 251, 233);
    /* 둥근모서리 brad */
    border-radius: 10px;
}

/* 타이틀 */
header h1{
    /* 글자크기 fz */
    font-size: 50px;
    /* 글자두께 fw */
    font-weight: normal;
    /* 글자체 ff */
    font-family: 'Black And White Picture', sans-serif;
    /* font-family: sans-serif,"궁서","굴림","돋움"; */
    color: rgb(0, 92, 57);
    /* 글자색 c */
    letter-spacing: 2px;
    /* 글자자간 1s */
    line-height: 1;
    /* 글자단어간격 ws */
    word-spacing: 10px;
    /* 기본마진 없앰 m0 */
    margin: 0;
}
/* 메뉴 GNB */
#gnb>a{
    /* a 요소는 두가지 기본설정이 있다 -> 글자색, 밑줄 */
    color: navy;
    /* 글자색 c */
    text-decoration: none;
    /* 글자셋팅 한번에 하기 */
    /* font : 스타일 두께 크기 줄간격 글자체 */
    /* font : 스두크/줄체 */
    font:bold 20px/40px 'Nanum Gothic';
    margin: 0 5px;
}

/* 마우스 오버 시 */
/* :hover 가상클래스 */
/* a+a 앞에 a가 있는 형제 a 요소 */
#gnb>a+a:hover{
    /* 글자색 c */
    color:hotpink;
    /* 글자데코 td */
    text-decoration: overline;
    /* 외각선 표시용 */
    /* outline: 1px solid red; */

}
/* 로고링크 */
#gnb img{
    width: 30px !important;
    /* 인라인 보다 최우선인 !important를 사용
    하지만 주의하여 사용해야함 JS코드가 안먹히는 경우가 있음 */

    /* 이미지 옆 인라인요소 세로방향 위치정렬속성 va */
    vertical-align: -7px;
    /* 특정값 : top, bottom, baseline,middle, 수치값 */
    /* 오른쪽 마진 mr-9 */
    margin-right: -9px;
}

/* 메인영역 이미지 */

/* 하단영역 */
footer.info{
    /* 글자중앙 */
    text-align: center;
    /* 배경색 bgc */
    background-color: aliceblue;
    /* 글자스타일 */
    font-style: normal;
}
.info address{
    font-style: normal;
    /* 글자스타일 */
    font-family: 'Nanum Gothic';
    /* 글자체 */
    font-size: 14px;
    /* 글자크기 */
    line-height: 2;
    /* 줄간격 */
    color: black;
    /* 글자색 */
}
/* 이름만 구분하여 span */
.info address span{
    font-family: 'Black Picture', sans-serif;
    /* 글자체 ff */
    color: blue;
    /* 글자색 */
    font-size: 20px;
    /* 글자크기 */
    text-decoration: underline;
    /* 글자데코 밑줄 tdu */
    text-decoration-style: dotted;
    /* 글자데코스타일 tds */
}
